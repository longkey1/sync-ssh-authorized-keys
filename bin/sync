#!/usr/bin/env bash

# variables
KEYS_URLS=("https://github.com/longkey1.keys" "https://github.com/qcmnagai.keys")

# functions
_usage() {
  echo "usage:"
  echo "${0} [-x execute]"
  exit 1
}
_sync() {
  local url=$1
  if [ "${flag_exec}" == "TRUE" ]; then
    mkdir -p ${HOME}/.ssh
    rm -f ${HOME}/.ssh/authorized_keys.new
    for url in "${KEYS_URLS[@]}" ; do
      wget ${url} -a ${HOME}/.ssh/authorized_keys.new
    done
    if [ ! -e ${HOME}/.ssh/authorized_keys ]; then
      mv ${HOME}/.ssh/authorized_keys.new ${HOME}/.ssh/authorized_keys
      echo "create authorized_keys"
      return
    fi
    diff ${HOME}/.ssh/authorized_keys ${HOME}/.ssh/authorized_keys > /dev/null 2>&1
    if [ $? -eq 1 ]; then
      mv ${HOME}/.ssh/authorized_keys ${HOME}/.ssh/authorized_keys.bk$(date +"%Y%m%d.%H%M%S.%6N")
      mv ${HOME}/.ssh/authorized_keys.new ${HOME}/.ssh/authorized_keys
      chmod 600 $HOME/.ssh/authorized_keys
      echo "update authorized_keys"
      return
    fi

    echo "no update authorized_keys"
  fi
  echo "dry run"
}

# main

# option
while getopts x opt
do
  case ${opt} in
  "x" )
    flag_exec="TRUE"
    ;;
  :|\?) _usage;;
  esac
done

_sync "${url}"
